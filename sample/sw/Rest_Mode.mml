
#title		"Rest mode test sample"
#Maker		"MML Typed by S.W."

#Text
"このMMLは、休符に関するモードを説明するためのMMLファイルです。
演奏において音符の後処理は大事なのですが、後処理のエンベロープを細かく行うと、ファイルサイズが大きくなるリスクがあります。
そこで、NSD.Libでは、休符に関するモードがあり、本機能を活用する事により、ファイルサイズを削減できる可能性があります。
ゲーム開発等、ＲＯＭ容量に制限がある場合に、是非、ご活用ください。

----------------+--------------------------------------------------------------
Command         |  取説URL
----------------+--------------------------------------------------------------
#rest, #wait    |  https://shaw02.github.io/nsdlib/mml.html                休符コマンド(r, w)のコンパイル方法の指定
Rm, R@, Rv      |  https://shaw02.github.io/nsdlib/mml_release.html        ゲートタイムの処理
r, w            |  https://shaw02.github.io/nsdlib/mml_rest.html           休符（＋その処理は臨時記号で）
----------------+--------------------------------------------------------------
"

#Code	"../../bin/nsd.bin"

#bgm	6

#timebase	48

#QMax	100

#QReverse

E(16){15 D2 14 D1 13 D1 12 D1 11 D1 10 D1 9 D1 8 D1 7 D1 L 6 D5 5 D5 R 5 4 3 2 1 5 6 D2 5 D2 4 D2 3 D2 2 D2 L 1}
E(17){15 15 14 14 13 D2 12 D2 11 D1 10 D1 9 D1 8 D1 L 7 R 4 3 2 1 L 5 6 5 5 4 4 3 2 1 4 4 3 3 2 2 1}
E(18){15 12 9 7 5 4 3 2 1 8 6 5 4 3 2 2 1 1 5 4 3 3 2 2 1 1 1 L 3 2 2 2 1 1 1 1}




//----------+--------------------------------------------------------------
// Command  |  説明
//----------+--------------------------------------------------------------
#rest   0   //  r コマンドは、音量＝０にする。
//----------+--------------------------------------------------------------
bgm(0)
{
    t120	l4	o4	Ev17	
            @0

            Rm0     //ゲートタイムの処理    ：音量＝０

        q75 cdef | edcr | efga | gfer
            crcr | crcr | l8 ccddeeff | erdr c2
}



//----------+--------------------------------------------------------------
// Command  |  取説URL
//----------+--------------------------------------------------------------
#rest   1   //  r コマンドは、Rv, R@コマンドに従う。
//----------+--------------------------------------------------------------
bgm(1)
{
    t120	l4	o4	Ev17	
            @0

            Rm1 Rv3 R@2 //ゲートタイムの処理    ：音量＝３、音色＝２（リリースエンベロープ無効）

        q75 cdef | edcr | efga | gfer
            crcr | crcr | l8 ccddeeff | erdr c2
}



//----------+--------------------------------------------------------------
// Command  |  取説URL
//----------+--------------------------------------------------------------
#rest   2   //  r コマンドは、エンベロープに従う。
            //  （リリースパターンが定義されていればリリースフェーズに遷移します）
//----------+--------------------------------------------------------------
bgm(2)
{
    t120	l4	o4	Ev17	
            @0

            Rm2     //ゲートタイムの処理    ：リリースエンベロープを適用（デフォルト）

        q75 cdef | edcr | efga | gfer
            crcr | crcr | l8 ccddeeff | erdr c2
}



//----------+--------------------------------------------------------------
// Command  |  取説URL
//----------+--------------------------------------------------------------
#rest   3   //  r コマンドは、Rmコマンドのモードに従う。
//----------+--------------------------------------------------------------
/*
	この休符のモード３は、休符時の挙動も、
	Rmコマンド（http://shaw.la.coocan.jp/nsdl/doc/mml_release.html）
	の設定値に従うモードです。

	後追いで追加実装したモードですが、Rmコマンドで、
	『ゲートタイム』及び『休符』の両方の挙動を設定できるので、
	このモードが便利だと思います。
*/
bgm(3)
{
    t120	l4	o4	Ev17	
            @0

            Rm1 Rv3 R@2 //ゲートタイムの処理    ：音量＝３、音色＝２（リリースエンベロープ無効）

        q75 cdef | edcr | efga | gfer

			Rm2			//ゲートタイムの処理    ：リリースエンベロープを適用

            crcr | crcr | l8 ccddeeff | erdr c2
}



//----------+--------------------------------------------------------------
// Command  |  取説URL
//----------+--------------------------------------------------------------
#rest   0   //  r コマンドは、音量＝０にする。
//----------+--------------------------------------------------------------
/*
	『ゲートタイム』の挙動と、『休符』の挙動を別々のモードに設定する効果です。
	『ゲートタイム』時はリリースエンベロープに従い、
	『休符』時は、音量を０にします。
*/
bgm(4)
{
    t120	l4	o4	Ev17	
            @0

            Rm2     //ゲートタイムの処理    ：リリースエンベロープを適用

        q75 cdef | edcr | efga | gfer
            crcr | crcr | l8 ccddeeff | erdr c2
}



//----------+--------------------------------------------------------------
// Command  |  取説URL
//----------+--------------------------------------------------------------
#rest   1   //  r コマンドは、Rv, R@コマンドに従う。
#wait   0   //  w コマンドは、音量＝０にする。
//----------+--------------------------------------------------------------
/*
Rmコマンドや、休符のモードは、以下のように、リリースパターンが定義されていない
音量エンベロープを用いる場合においても、疑似的に残響が得るための機能として
実装しました。
ゲーム等の組み込み時において、曲データのサイズ節約を図ることが可能です。
*/
bgm(5)
{
    t120	l4	o4	Ev18	//リリースパターンが定義されていない音量エンベロープ
            @0

            Rm1 Rv2 R@0     //ゲートタイムの処理    ：音量＝２、音色＝０（リリースエンベロープ無効）

        q75 cdef | edcr | efga | gfer
            cwcw | cwcw | l8 ccddeeff | ewdw c2
}

